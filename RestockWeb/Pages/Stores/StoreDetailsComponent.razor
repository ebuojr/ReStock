@page "/stores/{StoreNo:int}"

<PageTitle>Store Details</PageTitle>

<div class="w-full p-6">
    <div class="w-full p-2 flex justify-between items-center mb-4">
        <h1 class="text-2xl font-semibold">Store Details</h1>
        <div class="flex gap-2">
            <!-- Search Input -->
            <input type="text" @bind="SearchTerm" @bind:event="oninput" placeholder="Search inventory by ItemNo..."
                   class="border border-gray-300 rounded px-4 py-2 text-sm w-64" />
        </div>
    </div>
    @if (Store == null)
    {
        <p class="text-gray-600">Loading store details...</p>
    }
    else
    {
        <div class="grid grid-cols-1 lg:grid-cols-4 border-b border-gray-300 items-center p-4">
            <h2 class="text-sm font-semibold text-gray-900">@Store.Name</h2>
            <p class="text-sm text-gray-600">Store Number: <span class="font-medium">@Store.No</span></p>
            <p class="text-sm text-gray-600">Country: <span class="font-medium">@Store.Country</span></p>
            <p class="text-sm text-gray-600">Address: <span class="font-medium">@Store.Address</span></p>
        </div>
        <div class="mt-8">
            <h2 class="text-lg font-semibold mb-2">Store Inventory</h2>
            @if (FilteredInventoryList == null)
            {
                <p class="text-gray-600">Loading inventory...</p>
            }
            else if (!FilteredInventoryList.Any())
            {
                <p class="text-gray-600">No inventory found for this store.</p>
            }
            else
            {
                <div class="w-full grid grid-cols-1 divide-y-1 divide-gray-300 border border-gray-300 rounded">
                    @foreach (var inv in FilteredInventoryList)
                    {
                        <div class="grid grid-cols-1 lg:grid-cols-3 gap-2 bg-white p-6 hover:bg-gray-50 duration-75 first:rounded-t last:rounded-b">
                            <span class="text-sm text-gray-600">Item No: <span class="font-medium">@inv.ItemNo</span></span>
                            <span class="text-sm text-gray-600">Quantity: <span class="font-medium">@inv.Quantity</span></span>
                            <span class="text-sm text-gray-600">Last Updated: <span class="font-medium">@inv.LastUpdated.ToString("g")</span></span>
                        </div>
                    }
                </div>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public int StoreNo { get; set; }

    [Inject]
    public IStoreService StoreService { get; set; } = default!;

    [Inject]
    public IInventoryService InventoryService { get; set; } = default!;

    [Inject]
    public NavigationManager NavigationManager { get; set; } = default!;

    private Store? Store { get; set; }
    private List<StoreInventory>? StoreInventoryList { get; set; }
    private List<StoreInventory>? FilteredInventoryList { get; set; }

    private string _searchTerm = string.Empty;
    private string SearchTerm
    {
        get => _searchTerm;
        set
        {
            if (_searchTerm != value)
            {
                _searchTerm = value;
                FilterInventory();
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Store = await StoreService.GetStoreAsync(StoreNo);
        StoreInventoryList = await InventoryService.GetStoreInventoryByStoreNoAsync(StoreNo);
        FilteredInventoryList = StoreInventoryList;
    }

    private void FilterInventory()
    {
        if (string.IsNullOrWhiteSpace(SearchTerm))
        {
            FilteredInventoryList = StoreInventoryList;
        }
        else
        {
            FilteredInventoryList = StoreInventoryList?
                .Where(inv => inv.ItemNo.Contains(SearchTerm, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/stores");
    }
}
